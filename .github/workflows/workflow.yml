name: Deploy Lambda Function

on:
  push:
    branches: [ main, release/* ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: us-east-1
  AWS_DEFAULT_REGION: us-east-1
  LAMBDA_FUNCTION_NAME: FiapLumiereMediaProcessorLambda
  DEPENDENCY_LAYER_NAME: VideoExtractorDependencies
  PYTHON_VERSION: '3.9'
  DIST_DIR: dist
  S3_BUCKET: fiap-lumiere-lambda-code-bucket

permissions:
  contents: read
  id-token: write

jobs:
  build-and-test:
    name: Construir Artefato, Executar Testes e Analisar Cobertura
    runs-on: ubuntu-latest

    steps:
      - name: Realizar Checkout do Código-fonte
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          ref: ${{ github.ref }}

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Instalar dependências
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Executar testes e gerar cobertura
        run: |
          python -m pytest tests/ -v --cov=src/ --cov-report=xml --cov-report=html

      - name: Configurar Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Instalar SonarScanner
        run: |
          curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip
          unzip sonar-scanner.zip -d $HOME
          echo "$HOME/sonar-scanner-*/bin" >> $GITHUB_PATH

      - name: Enviar cobertura ao SonarCloud
        shell: bash
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          export PATH=$JAVA_HOME/bin:$PATH
          export SONAR_SCANNER_OPTS="-Djava.home=$JAVA_HOME"
          sonar-scanner \
            -Dsonar.projectKey="lumiere-fiap-soat-hackaton_fiap-lumiere-extractor-lambda" \
            -Dsonar.organization="lumiere-fiap-soat-hackaton" \
            -Dsonar.sources="src" \
            -Dsonar.python.coverage.reportPaths="coverage.xml" \
            -Dsonar.host.url="https://sonarcloud.io" \
            -Dsonar.token="$SONAR_TOKEN" \
            -Dsonar.scanner.metadataFilePath="$(pwd)/.scanner-meta.properties" \
            -Dsonar.coverage.exclusions="**/common/**,**/__test__/**,**/main.py,**/configuration.py"

      - name: Validar Quality Gate do SonarCloud
        shell: bash
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          echo "Aguardando análise do SonarCloud finalizar..."

          PROJECT_KEY="lumiere-fiap-soat-ha_
